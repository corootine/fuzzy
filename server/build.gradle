buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.31'
    id 'application'
}

application {
    mainClassName 'com.corootine.fuzzy.server.Server'
}

jar {
    archiveFileName.set('fuzoku-server.jar')
    archiveVersion.set('0.1.0')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'com.corootine.fuzzy.server.Server'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceCompatibility = 11
targetCompatibility = 11
compileKotlin.kotlinOptions.jvmTarget = '11'
compileKotlin.destinationDir = compileJava.destinationDir
compileTestKotlin.kotlinOptions.jvmTarget = '11'
compileKotlin.kotlinOptions {
    freeCompilerArgs = ["-Xinline-classes"]
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    implementation("io.ktor:ktor-server-core:1.5.2")
    implementation("io.ktor:ktor-server-netty:1.5.2")
    implementation("io.ktor:ktor-serialization:1.5.2")

    implementation("org.slf4j:slf4j-api:1.7.9")
    implementation("ch.qos.logback:logback-classic:1.2.3")
}

task stage(dependsOn: ['clean', 'assemble'])
assemble.mustRunAfter(clean)